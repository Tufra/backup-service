name: terraform apply
on: 
  release:
    types: [published]
  
  workflow_dispatch:

  workflow_call:
    inputs:
      image_tag:
        description: image tag
        required: true
        type: string
    
    secrets:
      TF_VAR_CLOUD_ID:
        required: true

      TF_VAR_FOLDER_ID:
        required: true

      TF_VAR_SUBNET_ID:
        required: true

      TF_VAR_SA_KEY:
        required: true
        
      TF_VAR_SSH_KEY:
        required: true
    
    outputs:
      VM_EXTERNAL_IP:
        description: VM external ip
        value: ${{ jobs.apply-terraform.outputs.external_ip }}

defaults:
  run:
    working-directory: ./terraform

env:
  TF_VAR_cloud_id: ${{ secrets.TF_VAR_CLOUD_ID }}
  TF_VAR_folder_id: ${{ secrets.TF_VAR_FOLDER_ID }}
  TF_VAR_subnet_id: ${{ secrets.TF_VAR_SUBNET_ID }}
  TF_VAR_sa_key: ${{ secrets.TF_VAR_SA_KEY }}
  TF_VAR_ssh_key: ${{ secrets.TF_VAR_SSH_KEY }}
  TF_VAR_image_tag: ${{ inputs.image_tag }}

jobs:
  apply-terraform:
    runs-on: ubuntu-latest
    outputs:
      external_ip: ${{ steps.ext.outputs.stdout }}
    steps:
      - uses: actions/checkout@v3
      
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: terraform init
        id: init  
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate
      
      - name: terraform plan
        id: plan
        run: terraform plan

      - uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>
      
            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`
      
            </details>
      
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
            <details><summary>Show Plan</summary>
      
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
      
            </details>

      - name: terraform apply
        id: apply
        run: terraform apply -auto-approve
      
      - name: extract external ip
        id: ext
        run: terraform output -raw external_ip

      


